%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% feature extraction main function ---> ExtractFeatures_BoW.m
%%% Author: Mojdeh Rastgoo
%%% UB-UdG 
%%% Verison: 1.0 
%%% This version is only applicable for extracting local features using BoW
%%% on gray scale images 
%%% Examples : 
%%%    LBP_feature(i,:) = ExtractFeatures(Img,'LBP', 'Mask', Mask); 
%%%    CLBP_feature(i,:) = ExtractFeatures(Img, 'CLBP', 'Mask', Mask); 
%%%    GLCMaO_feature(i,:) = ExtractFeatures(Img, 'GLCMaO', 'Mask', Mask); 
%%%    GLCMaD_feature(i,:) = ExtractFeatures(Img,'GLCMaD','Mask', Mask, 'theta', 45, 'num_levels', 32); 
%%%    Hog_feature(i,:) = ExtractFeatures(Img,'HoG', 'Mask', Mask, 'cellSize', 11);
%%%    sift_feature = ExtractFeatures(Img, 'sift'); 
%%%    color_feature(i,:) = ExtractFeatures(Img, 'Color1', 'Mask', Mask, 'nbins' , 30); 
%%%    color_features2(i,:) = ExtractFeatures(Img, 'Color2', 'Mask', Mask);
%%%    wavelet_features = ExtractFeatures(Img, 'wavelet', 'option2', 'WAL' , 'RI', 0, 'nlevel', 3);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%% Initialization 

    %%%% This is specific to PH2 dataset and depending on your application,
    %%%% it can be changed 
    ImgPath = '/home/mojdeh/Documents/PhD/Coding/Datasets/PH2Dataset/'; 
    resultPath = '/home/mojdeh/Documents/PhD/Coding/Matlab_codes/Classification/M_D_B_PH2/'; 
    name1 = 'PH2_Dataset_images';
    name2 = '_Dermoscopic_Image'; 
    name3 = '_lesion';
    load(fullfile(ImgPath, 'PH2_DataInformation.mat')); 

    data = Data_Sorted; 
    
    %function feature_matrix = ExtractFeatures_BoW(Img, FeatureId, varagin)
    
    %%% Setting the necessary directories -------------------------------------
    %%% The function operates within the protoclass-matlab folder 
    addpath ../../third_party/Basic_function

    %%% Parameters initialization 
    input.PatchSize = 16; 
    input.Mask = [] ; 
    input.samples = 16 ; 
    input.radius = 2; 
    input.option1 = 'riu'; 
    input.distance = 5; 
    input.num_levels = 16;
    input.theta = 45; 
    input.scale = 4 ; 
    input.orientation = 6; 
    input.cellSize = 9 ; 
    input.wname = 'db9'; 
    input.option2 = 'WP'; 
    input.nlevel = 4; 
    input.RI = 0; 
    input.coloroption = 'g'; 
    input.nbins = 42 ; 
    input = parseargs(input,varargin{:});
    
    
    %%%------------------------------------------------------------------------
    Img = im2double (Img); 
    grayImg = mat2gray(rgb2gray(Img)); 


    if (isempty(input.Mask) ~= 1)
        Mask = input.Mask; 
        disp ('The features are extracted from the rectangle bounded to the segmented lesion')
        %%% If Mask imge is provided: 
        BWImg = im2bw(Mask); 
        B_tem = regionprops(BWImg, 'BoundingBox');
        B_dim = zeros(4,1);
        Area_tem = regionprops(BWImg , 'Area'); 
        clear tem; 
        for  j = 1 : length(Area_tem)
            tem(j) = Area_tem(j).Area; 
        end
        [~, Id] = max(tem); 
        if size(B_tem,1) > 1
           B_dim(1,1) = B_tem(Id).BoundingBox(1); 
           B_dim(2,1) = B_tem(Id).BoundingBox(2); 
           B_dim(3,1) = B_tem(Id).BoundingBox(3); 
           B_dim(4,1) = B_tem(Id).BoundingBox(4); 
        elseif size(B_tem,1) == 1
           B_dim(1,1) = B_tem.BoundingBox(1); 
           B_dim(2,1) = B_tem.BoundingBox(2); 
           B_dim(3,1) = B_tem.BoundingBox(3); 
           B_dim(4,1) = B_tem.BoundingBox(4); 
        end 

        B_x = [ceil(B_dim(2)) fix(B_dim(2) + B_dim(4))]; 
        B_y = [ceil(B_dim(1)) fix(B_dim(1) + B_dim(3))];
        ImgGray = grayImg(B_x(1):B_x(2) , B_y(1):B_y(2), :); 
        ImgColor = Img(B_x(1):B_x(2) , B_y(1):B_y(2), :); 
        Mask = BWImg(B_x(1):B_x(2) , B_y(1):B_y(2));  


    elseif (isempty(input.Mask) == 1)
        disp ('The features are extracted from the entire image without considering segmentation')
        %%% if Mask image is not provided:
        ImgGray = grayImg; 
        ImgColor = Img; 

    end 
    
    
    
   
    

    
    
    
    
    for i = 1 : length(BinaryLabels)
        currFile = Idx_label(i) ; 

        Img = imread(fullfile(ImgPath, name1, cell2mat(data(currFile,1)) ,[cell2mat(data(currFile,1)) name2], ...
            [cell2mat(data(currFile,1)) '.bmp']));
        Mask = imread(fullfile(ImgPath, name1, cell2mat(data(currFile,1)) ,[cell2mat(data(currFile,1)) name3],...
            [cell2mat(data(currFile,1)) '_lesion.bmp']));

        LBP_feature(i,:) = ExtractFeatures_LowLevel(Img,'LBP', 'Mask', Mask); 
        CLBP_feature(i,:) = ExtractFeatures_LowLevel(Img, 'CLBP', 'Mask', Mask); 
        GLCMaO_feature(i,:) = ExtractFeatures_LowLevel(Img, 'GLCMaO', 'Mask', Mask); 
        GLCMaD_feature(i,:) = ExtractFeatures_LowLevel(Img,'GLCMaD','Mask', Mask, 'theta', 45, 'num_levels', 32); 
        Hog_feature(i,:) = ExtractFeatures_LowLevel(Img,'HoG', 'Mask', Mask, 'cellSize', 11);
        sift_feature = ExtractFeatures_LowLevel(Img, 'sift'); 
        color_feature(i,:) = ExtractFeatures_LowLevel(Img, 'Color1', 'Mask', Mask, 'nbins' , 30); 
        color_features2(i,:) = ExtractFeatures_LowLevel(Img, 'Color2', 'Mask', Mask);
         wavelet_features = ExtractFeatures_LowLevel(Img, 'wavelet', 'option2', 'WAL' , 'RI', 0, 'nlevel', 3);

    end 


